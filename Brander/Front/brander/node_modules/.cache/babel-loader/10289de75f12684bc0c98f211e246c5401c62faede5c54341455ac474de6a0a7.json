{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"background\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title_brand\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Brand generator\")]), /*#__PURE__*/_createCommentVNode(\" <form @submit.prevent=\\\"generateDesign\\\">\\n          <label for=\\\"project-description\\\">Project Description:</label>\\n          <textarea id=\\\"project-description\\\" v-model=\\\"projectDescription\\\"></textarea>\\n          <label for=\\\"mood\\\">Desired Mood:</label>\\n          <select id=\\\"mood\\\" v-model=\\\"mood\\\">\\n            <option value=\\\"professional\\\">Professional</option>\\n            <option value=\\\"playful\\\">Playful</option>\\n            <option value=\\\"sophisticated\\\">Sophisticated</option>\\n            <option value=\\\"quirky\\\">Quirky</option>\\n          </select>\\n          <button type=\\\"submit\\\">Submit</button>\\n        </form>\\n        <div v-if=\\\"errorMessage\\\" style=\\\"color: red\\\">{{ errorMessage }}</div>\\n        <div v-if=\\\"designResponse\\\">\\n          <h2>Design Parameters:</h2>\\n          <div v-for=\\\"(color, index) in designResponse.Colors\\\" :key=\\\"index\\\" class=\\\"color-box\\\">\\n            <div class=\\\"color-square\\\" :style=\\\"{ backgroundColor: color }\\\"></div>\\n            <p>Color {{ index + 1 }}: {{ color }}</p>\\n          </div>\\n          <p>Font: {{ designResponse.Font }}</p>\\n          <p>Justification: {{ designResponse.Justification}}</p>\\n        </div> \")], -1 /* HOISTED */));\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"names":["_createElementVNode","class","_createCommentVNode","_hoisted_1","_createElementBlock","_hoisted_2"],"sources":["/home/adrien/Documents/perso/perso/Brander/Front/brander/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"background\">\n      <div class=\"title_brand\"><h1>Brand generator</h1></div>\n          <!-- <form @submit.prevent=\"generateDesign\">\n          <label for=\"project-description\">Project Description:</label>\n          <textarea id=\"project-description\" v-model=\"projectDescription\"></textarea>\n          <label for=\"mood\">Desired Mood:</label>\n          <select id=\"mood\" v-model=\"mood\">\n            <option value=\"professional\">Professional</option>\n            <option value=\"playful\">Playful</option>\n            <option value=\"sophisticated\">Sophisticated</option>\n            <option value=\"quirky\">Quirky</option>\n          </select>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <div v-if=\"errorMessage\" style=\"color: red\">{{ errorMessage }}</div>\n        <div v-if=\"designResponse\">\n          <h2>Design Parameters:</h2>\n          <div v-for=\"(color, index) in designResponse.Colors\" :key=\"index\" class=\"color-box\">\n            <div class=\"color-square\" :style=\"{ backgroundColor: color }\"></div>\n            <p>Color {{ index + 1 }}: {{ color }}</p>\n          </div>\n          <p>Font: {{ designResponse.Font }}</p>\n          <p>Justification: {{ designResponse.Justification}}</p>\n        </div> -->\n    </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      projectDescription: '',\n      mood: '',\n      designResponse: null,\n      errorMessage: '',\n    };\n  },\n  methods: {\n  async generateDesign() {\n    try {\n      const response = await axios.post(`http://127.0.0.1:8082/api/generate_design/?text=${this.projectDescription}&mood=${this.mood}`);\n      this.designResponse = response.data;\n      console.log(this.designResponse);\n      this.errorMessage = '';\n    } catch (error) {\n      this.designResponse = null;\n      this.errorMessage = 'An error occurred while generating the design. Please try again later.';\n    }\n  },\n},\n};\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  .grid{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  .title_brand {\n\n    display: flex;\n    flex-direction: row;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    margin-right: 500px;\n    margin-top: 0%;\n    z-index: 1;\n    white-space: nowrap;\n    top: 3%;\n  }\n\n  body {\n    background-color: #F1FAEE;\n    color: #011627;\n    font-family: 'Open Sans', sans-serif;\n  }\n  header {\n    background-color: #1D3557;\n    color: #F1FAEE;\n    padding: 20px;\n  }\n  nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  nav a {\n    color: #F1FAEE;\n    text-decoration: none;\n    margin-right: 20px;\n  }\n  .background {\n            /* background-image: url('../assets/pdp.jpg'); */\n            /* Full height */\n            /* Center and scale the image nicely */ \n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 50px;\n    border-radius: 25px;\n    background-color: #092a46;\n    color: #EEF4ED;\n    height: 700px;\n    max-height: 1000px;\n  }\n\n  .color-square {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n        margin-right: 10px;\n        border: 1px solid #011627;\n      }\n      .color-box {\n        display: flex;\n        align-items: center;\n        margin-bottom: 5px;\n      }\n\n</style> "],"mappings":";;gEAEIA,mBAAA,CAwBM;EAxBDC,KAAK,EAAC;AAAY,I,aACrBD,mBAAA,CAAuD;EAAlDC,KAAK,EAAC;AAAa,I,aAACD,mBAAA,CAAwB,YAApB,iBAAe,E,gBACxCE,mBAAA,krCAqBQ,C;oBAvBdC,UAwBM,C;;uBAzBRC,mBAAA,CA0BQ,aAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}